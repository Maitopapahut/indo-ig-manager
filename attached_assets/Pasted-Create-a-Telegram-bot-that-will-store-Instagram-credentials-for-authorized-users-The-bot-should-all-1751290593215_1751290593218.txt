Create a Telegram bot that will store Instagram credentials for authorized users. The bot should allow users to add, view, and delete credentials using inline buttons. If the user sends only the Instagram ID, the bot will automatically use a default password. The bot should also maintain an activity log of user actions and store data in text files.

Bot Requirements:
User Authentication:

The bot should verify users using an authorized users file (e.g., users.txt).

Only authorized users should be allowed to add, view, or delete credentials.

If the user is unauthorized, the bot should reply with: "You are not authorized to use this bot. Contact admin for access."

Commands:

/start:

Greet the user and show an interactive inline keyboard with the following options:

Add Credentials

View Credentials

Delete Credentials

Help

/add:

Ask the user to send their Instagram ID and Password.

If the user sends only the Instagram ID, the bot should automatically use a default password (e.g., defaultpassword123).

Save the credentials in a credentials.txt file, including the date of addition.

/view:

Show the list of saved credentials in a structured format.

Display each saved credential with the Instagram ID, Password, and Date Added.

Show the total count of saved credentials.

/delete {Instagram ID}:

Allow the user to delete credentials for the given Instagram ID.

Interactive Inline Keyboard:

Use inline buttons to allow the user to Add, View, and Delete credentials easily.

Also, add a Help button for guidance.

Logging:

Log all user actions such as add, view, and delete.

The logs should be stored in an activity_log.txt file, with details like the timestamp, user ID, and username of the action performed.

Help Command:

The bot should have a Help button that provides a short guide on how to use the bot and its commands (e.g., /add, /view, /delete).

Detailed Steps for Implementation:
Start Command:

When the user sends /start, the bot should check if they are authorized.

If the user is authorized, the bot should display an inline keyboard with four options:

Add Credentials

View Credentials

Delete Credentials

Help

If the user is unauthorized, reply with: "You are not authorized to use this bot."

Add Credentials Command:

The bot should prompt the user to send their Instagram ID and Password.

If the user only sends the Instagram ID, the bot should use the default password (defaultpassword123).

The credentials should be saved in the credentials.txt file with the Instagram ID, Password, and Date Added.

View Credentials Command:

Display all saved credentials in a structured format.

Show the Instagram ID, Password, and Date Added for each saved credential.

Display the total number of saved credentials.

Delete Credentials Command:

Allow the user to delete saved credentials for a specific Instagram ID.

If the user tries to delete credentials for an unauthorized ID, the bot should respond: "You are not authorized to delete credentials."

Help Command:

The bot should provide information about how to use it, including the following:

/add: To add credentials (Instagram ID and Password).

/view: To view all saved credentials.

/delete: To delete credentials by Instagram ID.

Example Command Flow:
User sends: /start

Bot replies with an inline keyboard:

Add Credentials

View Credentials

Delete Credentials

Help

User sends: /add InstagramID

Bot automatically fills in the password with defaultpassword123.

Bot saves the credentials in the credentials.txt file.

User sends: /view

Bot shows the credentials in a structured list:

Instagram ID: InstagramUser1

Password: mypassword

Date Added: 2025-06-01

Bot also shows the total count of saved credentials.

User sends: /delete InstagramID

Bot deletes the credentials for the provided Instagram ID and confirms the action.

User sends: /help

Bot provides a guide on how to use the bot, explaining how to add, view, and delete credentials.

Key Files:
users.txt (Authorized Users List):

This file contains the Telegram user IDs of authorized users.

Only users present in this file can add, view, or delete credentials.

credentials.txt (Stored Instagram Credentials):

This file contains the saved credentials in the format:

InstagramID Password AddDate

Example: InstagramUser1 mypassword 2025-06-30

activity_log.txt (Activity Log):

This file records all actions like adding, viewing, or deleting credentials with timestamps.

The log format will be like:

2025-06-30 10:00:00 - User ID 12345 (username) added Instagram ID InstagramUser1

